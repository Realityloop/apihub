<?php
/**
 * @file
 * Core functions for the API Hub module.
 */

/**
 * Include additional files.
 */
$dirname  = dirname(__FILE__) . '/includes';
$includes = file_scan_directory($dirname, '/.inc$/');
foreach (module_list() as $module) {
  $file = "{$dirname}/{$module}.inc";
  if (isset($includes[$file])) {
    require_once $file;
  }
}

/**
 * @param bool $reset
 *
 * @return mixed
 */
function apihub_handlers($reset = FALSE) {
  $handlers =& drupal_static(__FUNCTION__, array());

  if (empty($handlers) || $reset) {
    $handlers = module_invoke_all('apihub_handler_info');
    foreach ($handlers as $class => $title) {
      // Ensure class exists.
      if (!class_exists($class) || !is_subclass_of($class, 'apihubHandler')) {
        unset($handlers['class']);
      }
    }
  }

  return $handlers;
}

/**
 * @param $handler
 *
 * @return mixed|bool
 */
function apihub_handlers_load($handler) {
  if (class_exists($handler)) {
    return new $handler();
  }
  return FALSE;
}

/**
 * @param array $defaults
 *
 * @return mixed
 */
function apihub_handlers_form($defaults = array(), $container = TRUE) {
  $form['class'] = array(
    '#type'    => 'select',
    '#title'   => t('Handler'),
    '#options' => apihub_handlers(),
    '#ajax'    => array(
      'callback' => 'apihub_handlers_form_js',
      'wrapper'  => 'handler-form-settings-output',
    ),
  );

  $form['settings'] = array(
    '#type'        => 'fieldset',
    '#title'       => t('Handler settings'),
    '#tree'        => TRUE,
    '#collapsible' => TRUE,
    '#prefix'      => '<div id="handler-form-settings-output">',
    '#suffix'      => '</div>',
  );

  // Determine which handler is currently in use.
  $handler = isset($defaults['class']) ? $defaults['class'] : key($form['class']['#options']);

  $form['class']['#default_value'] = $handler;

  // Build Handler settings form.
  if (class_exists($handler)) {
    $handler = new $handler();
    if (method_exists($handler, 'settingsForm')) {
      foreach ($handler->settingsForm() as $id => $setting) {
        $form['settings'][$id] = _apihub_field_to_fapi($setting);
        if (isset($defaults['settings'][$id])) {
          $form['settings'][$id]['#default_value'] = $defaults['settings'][$id];
        }
      }
    }
  }

  if ($container) {
    $form = array(
      'handler' => array(
          '#type' => 'container',
          '#tree' => TRUE,
        ) + $form
    );
  }

  return $form;
}

/**
 * Handlers settings form AJAX callback.
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 */
function apihub_handlers_form_js($form, $form_state) {
  drupal_get_messages();

  return $form['settings'];
}

/**
 * Convert an API Hub field to a FAPI element.
 *
 * @param $field
 *
 * @return array
 */
function _apihub_field_to_fapi($field) {
  $field += array(
    'name'        => '',
    'type'        => 'text',
    'description' => '',
    'required'    => FALSE,
  );

  // @TODO - Make this extensible.
  $types = array(
    'boolean' => 'checkbox',
    'decimal' => 'textfield',
    'text'    => 'textfield',
    'user'    => 'textfield',
  );

  $element = array(
    '#title'       => $field['name'],
    '#type'        => isset($types[$field['type']]) ? $types[$field['type']] : 'textfield',
    '#description' => $field['description'],
    '#required'    => $field['required'],
  );

  // Get options from options callback.
  if (isset($field['options callback']) && function_exists($field['options callback'])) {
    $field['options'] = $field['options callback']();
  }

  // Build select list.
  if (!empty($field['options'])) {
    $options = array();
    if (!$field['required']) {
      $options[''] = t('- Default -');
    }

    if (is_string($field['options'])) {
      $options += list_extract_allowed_values($field['options'], 'list_text', FALSE);
    }
    else {
      $options += $field['options'];
    }

    $element['#type']    = 'select';
    $element['#options'] = $options;
  }

  return $element;
}
